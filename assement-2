use tes;
-- Create Products table
CREATE TABLE Products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(100),
    category VARCHAR(50),
    unit_price DECIMAL(10, 2)
);
-- Insert sample data
INSERT INTO Products (product_id, product_name, category, unit_price) VALUES
(101, 'Laptop', 'Electronics', 500.00),
(102, 'Smartphone', 'Electronics', 300.00),
(103, 'Headphones', 'Electronics', 30.00),
(104, 'Keyboard', 'Electronics', 20.00),
(105, 'Mouse', 'Electronics', 15.00);
-- 1. Retrieve all columns from the product table.
SELECT * FROM Products;
-- 2. Retrieve the product_name and unit_price from the Products table.
SELECT product_name, unit_price
FROM Products;
-- 3. Filter the Products table to show only products in the &#39;Electronics&#39; category.
SELECT * FROM Products
WHERE category = 'Electronics';
-- 4. Retrieve the product_id and product_name from the Products table for products with a unit_price greater than $100.
SELECT product_id, product_name
FROM Products
WHERE unit_price > 100;

-- 5. Calculate the average unit_price of products in the Products table.
SELECT AVG(unit_price) AS average_price
FROM Products;
-- 6. Retrieve product_name and unit_price from the Products table with the Highest Unit Price
SELECT product_name, unit_price
FROM Products
ORDER BY unit_price DESC
LIMIT 1;

-- 7. Retrieve the product_name and unit_price from the Products table, ordering the results by unit_price in descending order.
SELECT product_name, unit_price
FROM Products
ORDER BY unit_price DESC;

-- 8. Retrieve the product_name and unit_price from the Products table, filtering the unit_price to show only values between $20 and $600.
SELECT product_name, unit_price
FROM Products
WHERE unit_price BETWEEN 20 AND 600;

-- 9. Retrieve the product_name and category from the Products table, ordering the results by category in ascending order.
SELECT product_name, category
FROM Products
ORDER BY category ASC;


