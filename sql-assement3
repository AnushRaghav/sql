CREATE TABLE students10 (
    student_id INT,
    name VARCHAR(50),
    course VARCHAR(50),
    marks INT,
    age INT,
    city VARCHAR(50),
    scholarship INT
);

INSERT INTO students10 VALUES 
(1, 'Ravi', 'Math', 85, 20, 'Chennai', NULL),
(2, 'Priya', 'Science', 92, 21, 'Delhi', 10000),
(3, 'Amit', 'English', 75, 19, 'Mumbai', 5000),
(4, 'Sneha', 'Math', 88, 22, 'Kolkata', NULL),
(5, 'John', 'History', 67, 20, 'Chennai', NULL),
(6, 'Meena', 'Science', 95, 23, 'Delhi', 15000),
(7, 'Karan', 'English', 70, 20, 'Bangalore', 3000),
(8, 'Divya', 'History', 80, 22, 'Mumbai', NULL);





USE tes;

-- Create table
CREATE TABLE students10 (
    student_id INT,
    name VARCHAR(50),
    course VARCHAR(50),
    marks INT,
    age INT,
    city VARCHAR(50),
    scholarship INT
);

-- Insert data
INSERT INTO students10 VALUES 
(1, 'Ravi', 'Math', 85, 20, 'Chennai', NULL),
(2, 'Priya', 'Science', 92, 21, 'Delhi', 10000),
(3, 'Amit', 'English', 75, 19, 'Mumbai', 5000),
(4, 'Sneha', 'Math', 88, 22, 'Kolkata', NULL),
(5, 'John', 'History', 67, 20, 'Chennai', NULL),
(6, 'Meena', 'Science', 95, 23, 'Delhi', 15000),
(7, 'Karan', 'English', 70, 20, 'Bangalore', 3000),
(8, 'Divya', 'History', 80, 22, 'Mumbai', NULL);

-- 1. Students with marks between 70 and 90
SELECT * FROM students10
WHERE marks BETWEEN 70 AND 90;

-- 2. Students aged between 20 and 22
SELECT * FROM students10
WHERE age BETWEEN 20 AND 22;

-- 3. Students whose name starts with 'P'
SELECT * FROM students10
WHERE name LIKE 'P%';

-- 4. Students whose city contains 'ai'
SELECT * FROM students10
WHERE city LIKE '%ai%';

-- 5. Names where the second character is 'r'
SELECT * FROM students10
WHERE name LIKE '_r%';

-- 6. Top 3 students with highest marks
SELECT * FROM students10
ORDER BY marks DESC
LIMIT 3;

-- 7. Students who have a scholarship
SELECT * FROM students10
WHERE scholarship IS NOT NULL;

-- 8. Students only if there is at least one from 'Delhi'
SELECT * FROM students10
WHERE EXISTS (SELECT 1 FROM students10 WHERE city = 'Delhi');

-- 9. Students with marks greater than ANY student in 'History'
SELECT * FROM students10
WHERE marks > ANY (SELECT marks FROM students10 WHERE course = 'History');

-- 10. Students with marks greater than ALL students in 'English'
SELECT * FROM students10
WHERE marks > ALL (SELECT marks FROM students10 WHERE course = 'English');

-- 11. Students in 'Math' course AND age > 21
SELECT * FROM students10
WHERE course = 'Math' AND age > 21;

-- 12. Students in 'Science' OR 'English' course
SELECT * FROM students10
WHERE course IN ('Science', 'English');

-- 13. Students NOT from 'Mumbai'
SELECT * FROM students10
WHERE city <> 'Mumbai';

-- 14. Students who donâ€™t have a scholarship
SELECT * FROM students10
WHERE scholarship IS NULL;

-- 15. Replace NULL scholarship with 0 using IFNULL
SELECT name, IFNULL(scholarship, 0) AS scholarship_amount
FROM students10;

-- 16. Replace NULL scholarship with 0 using COALESCE
SELECT name, COALESCE(scholarship, 0) AS scholarship_amount
FROM students10;
